// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[{"name":"_address","type":"address"},{"name":"index","type":"uint256"}],"name":"getKnowledge","outputs":[{"name":"","type":"bytes32"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"cells","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"index","type":"uint256"}],"name":"getCell","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"getAddress","outputs":[{"name":"retVal","type":"address"}],"type":"function"},{"constant":false,"inputs":[],"name":"Spawn","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"numCells","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"Tick","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"get","outputs":[{"name":"retVal","type":"bytes32"}],"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"getCellnumber","outputs":[{"name":"retVal","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"data","type":"bytes32"}],"name":"set","outputs":[],"type":"function"},{"inputs":[],"type":"constructor"}],
    binary: "606060405260018054600160a060020a03191633179055600060035560606103fe8061015a833901809050604051809103906000f0600860006101000a815481600160a060020a0302191690830217905550600860009054906101000a9004600160a060020a0316600160a060020a031663478f2ad4600860009054906101000a9004600160a060020a0316604051827c01000000000000000000000000000000000000000000000000000000000281526004018082600160a060020a03168152602001807f43656c6c5a65726f0000000000000000000000000000000000000000000000008152602001506020019150506020604051808303816000876161da5a03f115610002575050604080515160028054600160a060020a031990811690921790819055600354600090815260066020529283208054909216600160a060020a039190911617905561038e9150819061055890396000f360606040526103ec806100126000396000f3606060405260e060020a6000350463478f2ad48114601a575b005b604c60043560243560008160606103748061007883390180828152602001915050604051809103906000f09392505050565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f36060604052604051602080610374833950608060405251600160a060020a03329081166000908152600160205260409020612710905560068290556007805460ff19169055600582905560028054600160a060020a0319169091179055506103098061006b6000396000f3606060405236156100a35760e060020a60003504630b1cdbc681146100a557806317d7de7c146100b857806335fe620f146100c25780636d4ce63c146100e75780637104ddb2146100f2578063847ad742146101045780638da5cb5b1461011857806390b98a111461012a57806390db72d91461016557806399baa10c1461018b578063db80813f146101b8578063eb7a4a8e146101c3578063f8b2cb4f146101ee575b005b6100a35b6007805460ff19166001179055565b61021d6005545b90565b61021d60043560243560075460009060ff161515610250575060058190556001610250565b61021d6006546100bf565b61022f600354600160a060020a031681565b61022f600454600160a060020a03166100bf565b61022f600254600160a060020a031681565b61021d60043560243560075460009060ff1615156102505733600160a060020a03168152600160205260408120548290101561025657610250565b6003805473ffffffffffffffffffffffffffffffffffffffff19166004351790556100a3565b61021d600254600160a060020a03166000908152600160205260408120548114156102fd576102fd6100a9565b6004356006556100a3565b61021d600435600073ac2819324d31ef2dcbb882ada932296d3a509ae46396e4ee3d6102b8846101f5565b61021d6004355b600160a060020a038116600090815260016020526040812054811415610298576102986100a9565b60408051918252519081900360200190f35b60408051600160a060020a03929092168252519081900360200190f35b5060015b92915050565b33600160a060020a0390811660008181526001602052604080822080548790038155938716825281208054860190559081529054141561024c5761024c6100a9565b50600160a060020a0381166000908152600160205260409020545b919050565b60026040518360e060020a02815260040180838152602001828152602001925050506020604051808303818660325a03f4156100025750506040515191506102b39050565b5060075460ff166100bf566060604052361561008d5760e060020a6000350463057582e2811461008f5780631941fd14146100b4578063206848f6146100d557806338cc48311461010e578063505f9f2d1461012157806352d55c111461028157806369e9c1241461028a5780636d4ce63c1461032e5780638da5cb5b1461033e5780638e900d9714610350578063db80813f1461035b575b005b6024356000908152600760205260409020545b60408051918252519081900360200190f35b6100f1600435600660205260009081526040902054600160a060020a031681565b600435600090815260066020526040902054600160a060020a03165b60408051600160a060020a03929092168252519081900360200190f35b6100f1600554600160a060020a03165b90565b6100f15b600254604080517f6d4ce63c0000000000000000000000000000000000000000000000000000000081529051600092600160a060020a031691636d4ce63c916004828101926020929190829003018187876161da5a03f1156100025750506040805180516003805486526007602090815284872092909255805460010190556008547f478f2ad4000000000000000000000000000000000000000000000000000000008352600160a060020a0316600483018190527f43656c6c000000000000000000000000000000000000000000000000000000006024840152925192935063478f2ad492604480840193829003018187876161da5a03f11561000257505060408051516002805473ffffffffffffffffffffffffffffffffffffffff199081169092179081905560038054865260066020528386208054909316600160a060020a039283161790925590548452922054909116905061011e565b6100a260035481565b6100f1600254604080517f99baa10c0000000000000000000000000000000000000000000000000000000081529051600092600160a060020a0316916399baa10c916004828101926020929190829003018187876161da5a03f1156100025750506040515115905061036d576002546005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055610366610125565b6100a2600061036660005461011e565b6100f1600154600160a060020a031681565b6100a260035461011e565b60043560005561008d565b905061011e565b50600354600090815260066020526040902054600160a060020a031661011e56",
    unlinked_binary: "606060405260018054600160a060020a03191633179055600060035560606103fe8061015a833901809050604051809103906000f0600860006101000a815481600160a060020a0302191690830217905550600860009054906101000a9004600160a060020a0316600160a060020a031663478f2ad4600860009054906101000a9004600160a060020a0316604051827c01000000000000000000000000000000000000000000000000000000000281526004018082600160a060020a03168152602001807f43656c6c5a65726f0000000000000000000000000000000000000000000000008152602001506020019150506020604051808303816000876161da5a03f115610002575050604080515160028054600160a060020a031990811690921790819055600354600090815260066020529283208054909216600160a060020a039190911617905561038e9150819061055890396000f360606040526103ec806100126000396000f3606060405260e060020a6000350463478f2ad48114601a575b005b604c60043560243560008160606103748061007883390180828152602001915050604051809103906000f09392505050565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f36060604052604051602080610374833950608060405251600160a060020a03329081166000908152600160205260409020612710905560068290556007805460ff19169055600582905560028054600160a060020a0319169091179055506103098061006b6000396000f3606060405236156100a35760e060020a60003504630b1cdbc681146100a557806317d7de7c146100b857806335fe620f146100c25780636d4ce63c146100e75780637104ddb2146100f2578063847ad742146101045780638da5cb5b1461011857806390b98a111461012a57806390db72d91461016557806399baa10c1461018b578063db80813f146101b8578063eb7a4a8e146101c3578063f8b2cb4f146101ee575b005b6100a35b6007805460ff19166001179055565b61021d6005545b90565b61021d60043560243560075460009060ff161515610250575060058190556001610250565b61021d6006546100bf565b61022f600354600160a060020a031681565b61022f600454600160a060020a03166100bf565b61022f600254600160a060020a031681565b61021d60043560243560075460009060ff1615156102505733600160a060020a03168152600160205260408120548290101561025657610250565b6003805473ffffffffffffffffffffffffffffffffffffffff19166004351790556100a3565b61021d600254600160a060020a03166000908152600160205260408120548114156102fd576102fd6100a9565b6004356006556100a3565b61021d600435600073__ConvertLib____________________________6396e4ee3d6102b8846101f5565b61021d6004355b600160a060020a038116600090815260016020526040812054811415610298576102986100a9565b60408051918252519081900360200190f35b60408051600160a060020a03929092168252519081900360200190f35b5060015b92915050565b33600160a060020a0390811660008181526001602052604080822080548790038155938716825281208054860190559081529054141561024c5761024c6100a9565b50600160a060020a0381166000908152600160205260409020545b919050565b60026040518360e060020a02815260040180838152602001828152602001925050506020604051808303818660325a03f4156100025750506040515191506102b39050565b5060075460ff166100bf566060604052361561008d5760e060020a6000350463057582e2811461008f5780631941fd14146100b4578063206848f6146100d557806338cc48311461010e578063505f9f2d1461012157806352d55c111461028157806369e9c1241461028a5780636d4ce63c1461032e5780638da5cb5b1461033e5780638e900d9714610350578063db80813f1461035b575b005b6024356000908152600760205260409020545b60408051918252519081900360200190f35b6100f1600435600660205260009081526040902054600160a060020a031681565b600435600090815260066020526040902054600160a060020a03165b60408051600160a060020a03929092168252519081900360200190f35b6100f1600554600160a060020a03165b90565b6100f15b600254604080517f6d4ce63c0000000000000000000000000000000000000000000000000000000081529051600092600160a060020a031691636d4ce63c916004828101926020929190829003018187876161da5a03f1156100025750506040805180516003805486526007602090815284872092909255805460010190556008547f478f2ad4000000000000000000000000000000000000000000000000000000008352600160a060020a0316600483018190527f43656c6c000000000000000000000000000000000000000000000000000000006024840152925192935063478f2ad492604480840193829003018187876161da5a03f11561000257505060408051516002805473ffffffffffffffffffffffffffffffffffffffff199081169092179081905560038054865260066020528386208054909316600160a060020a039283161790925590548452922054909116905061011e565b6100a260035481565b6100f1600254604080517f99baa10c0000000000000000000000000000000000000000000000000000000081529051600092600160a060020a0316916399baa10c916004828101926020929190829003018187876161da5a03f1156100025750506040515115905061036d576002546005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055610366610125565b6100a2600061036660005461011e565b6100f1600154600160a060020a031681565b6100a260035461011e565b60043560005561008d565b905061011e565b50600354600090815260066020526040902054600160a060020a031661011e56",
    address: "0x91621e28cf75193bd28dabbba97f6906e1319c37",
    generated_with: "2.0.9",
    contract_name: "System"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("System error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("System error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("System error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("System error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.System = Contract;
  }

})();
